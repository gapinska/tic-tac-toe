{"version":3,"sources":["Components/Board/Field.js","Components/GameFlow/GameStart.js","gameLogic.js","Components/GameFlow/GameStatus.js","Components/GameFlow/GameContinue.js","Components/GameFlow/GameEnd.js","Components/GameFlow/GameOver.js","Components/Board/GameBar.js","Components/Board/VerdictModal.js","Components/Board/PlayerButton.js","Components/GameFlow/GameRestart.js","Components/Board/Board.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","width","height","Field","onClick","value","classes","className","Paper","elevation","GameStart","X","O","TIE","WINNER_LINES","calculateVerdict","fields","winner","i","length","a","b","c","calculateWinner","tie","includes","isAllFieldsOccupied","Object","freeze","forEach","WINNER_LINE","GameStatus","gamerTurn","verdict","React","memo","GameContinue","handleClickContinueGame","disabled","status","Button","variant","color","GameEnd","handleClickEndGame","GameOver","finalVerdict","gamer1Score","gamer2Score","calculateFinalVerdict","flexGrow","menuButton","marginRight","GameBar","AppBar","position","Typography","title","customStyles","overlay","top","content","left","right","bottom","transform","padding","VerdictModal","isOpen","style","ariaHideApp","PlayerButton","GameRestart","handleClickRestartGame","Board","useState","startGame","setStartGame","gamer1Started","setgamer1Started","continueGameActive","setContinueGameActive","endGame","setEndGame","Array","fill","boardFields","setBoardFields","gamer1Turn","setGamer1Turn","setVerdict","setGamer1Score","setGamer2Score","modalIsOpen","setModalIsOpen","useEffect","prevGamer1Score","handleClickGamerPicked","gamer","map","boardField","index","newFields","handleClickField","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAIMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPC,OAAQF,EAAMG,QAAQ,IACtBC,MAAOJ,EAAMG,QAAQ,IACrBE,OAAQL,EAAMG,QAAQ,UAgBbG,EAXD,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAClBC,EAAUX,IAChB,OACE,qBAAKY,UAAWD,EAAQR,KAAxB,SACE,cAACU,EAAA,EAAD,CAAOC,UAAW,EAAGF,UAAU,QAAQH,QAASA,EAAhD,SACGC,OCTMK,EATG,WAChB,OACE,sBAAKH,UAAU,YAAf,UACE,oBAAIA,UAAU,kBAAd,qBACA,oBAAIA,UAAU,kBAAd,wCCLAI,EAAI,IACJC,EAAI,IACJC,EAAM,MAENC,EAAe,CACnB,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAoBT,SAASC,EAAiBC,GACxB,IAAMC,EAfR,SAAyBD,GACvB,IAAK,IAAIE,EAAI,EAAGA,EAAIJ,EAAaK,OAAQD,IAAK,CAAC,IAAD,cAC1BJ,EAAaI,GADa,GACrCE,EADqC,KAClCC,EADkC,KAC/BC,EAD+B,KAE5C,GAAIN,EAAOI,IAAMJ,EAAOI,KAAOJ,EAAOK,IAAML,EAAOI,KAAOJ,EAAOM,GAC/D,OAAON,EAAOI,GAGlB,OAAO,KAQQG,CAAgBP,GACzBQ,EAAiB,OAAXP,GANd,SAA6BD,GAC3B,OAAQA,EAAOS,SAAS,MAKOC,CAAoBV,GACnD,OAAe,OAAXC,GAAmBO,EACjBA,EACKX,EAEAI,EAGJ,KA3BTU,OAAOC,OAAOd,GACdA,EAAae,SAAQ,SAACC,GAAD,OAAiBH,OAAOC,OAAOE,MCdpD,IAAMC,EAAa,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAC/B,OACE,qBAAK1B,UAAU,cAAf,SACI0B,EAKA,+CAAkBA,KAJlB,8CACa,+BAAOD,UASbE,MAAMC,KAAKJ,G,QCGXK,EAhBM,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,wBAChBC,GADsD,EAAbC,OAG/C,OACE,cAACC,EAAA,EAAD,CACEjC,UAAU,gBACV+B,SAAUA,EACVG,QAAQ,WACRC,MAAM,UACNtC,QAASiC,EALX,yBCSWM,EAbC,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,mBACjB,OACE,cAACJ,EAAA,EAAD,CACEjC,UAAU,gBACVkC,QAAQ,WACRC,MAAM,UACNtC,QAASwC,EAJX,0BCaWC,EAfE,SAAC,GAAkC,IAC5CC,EJyCR,SAA+BC,EAAaC,GAC1C,OAAID,EAAcC,EACTrC,EACEqC,EAAcD,EAChBnC,EACKC,EI9COoC,CAD4B,EAA/BF,YAA+B,EAAlBC,aAE/B,OACE,sBAAKzC,UAAU,YAAf,UACE,qBAAKA,UAAU,iCAAf,uBACA,sBAAKA,UAAU,oCAAf,yBACc,+BAAOuC,OAErB,qBAAKvC,UAAU,oCAAf,SACGuC,IAAiBjC,EAAM,mBAAqB,uB,gBCP/ClB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJoD,SAAU,GAEZC,WAAY,CACVC,YAAavD,EAAMG,QAAQ,QAIzBqD,EAAU,SAAC,GAAkC,IAAhCN,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,YACxB1C,EAAUX,IAChB,OACE,8BACE,eAAC2D,EAAA,EAAD,CAAQC,SAAS,SAAjB,UACE,cAACC,EAAA,EAAD,CAAYf,QAAQ,KAAKlC,UAAWD,EAAQmD,MAA5C,yBAGA,sBAAKlD,UAAU,cAAf,UACE,sBAAKA,UAAU,mBAAf,sBAA4CwC,KAC5C,sBAAKxC,UAAU,mBAAf,sBAA4CyC,cAOvCd,MAAMC,KAAKkB,G,iBC5BpBK,EAAe,CACnBC,QAAS,CACPC,IAAK,SAEPC,QAAS,CACPD,IAAK,MACLE,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRZ,YAAa,OACba,UAAW,wBACXC,QAAS,MAQEC,EAJM,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtB,OAAO,cAAC,IAAD,CAAOC,MAAOX,EAAcU,OAAQA,EAAQE,aAAa,KCRnDC,EARM,SAAC,GAAwB,IAAtBnE,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAC/B,OACE,cAACG,EAAA,EAAD,CAAOC,UAAW,EAAGF,UAAU,aAAaH,QAASA,EAArD,SACGC,KCUQmE,EAbK,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,uBACrB,OACE,cAACjC,EAAA,EAAD,CACEjC,UAAU,gBACVkC,QAAQ,WACRC,MAAM,UACNtC,QAASqE,EAJX,2BCmIWC,EA3HD,WAAO,IAAD,EACgBC,oBAAS,GADzB,mBACXC,EADW,KACAC,EADA,OAEwBF,oBAAS,GAFjC,mBAEXG,EAFW,KAEIC,EAFJ,OAGkCJ,oBAAS,GAH3C,mBAGXK,EAHW,KAGSC,EAHT,OAIYN,oBAAS,GAJrB,mBAIXO,EAJW,KAIFC,EAJE,OAKoBR,mBAASS,MAAM,GAAGC,KAAK,OAL3C,mBAKXC,EALW,KAKEC,EALF,OAMkBZ,oBAAS,GAN3B,mBAMXa,EANW,KAMCC,EAND,OAOYd,mBAAS,MAPrB,mBAOX1C,EAPW,KAOFyD,EAPE,OAQoBf,mBAAS,GAR7B,mBAQX5B,EARW,KAQE4C,EARF,OASoBhB,mBAAS,GAT7B,mBASX3B,EATW,KASE4C,EATF,QAUoBjB,oBAAS,GAV7B,qBAUXkB,GAVW,MAUEC,GAVF,MAYlBC,qBAAU,WACR,IAAM9D,EAAUlB,EAAiBuE,GACjC,OAAQrD,GACN,KAAKtB,EACHgF,GAAe,SAACK,GAAD,OAAqBA,EAAkB,KACtDN,EAAWzD,GACXgD,GAAsB,GACtBa,IAAe,GACf,MACF,KAAKlF,EACHgF,GAAe,SAACI,GAAD,OAAqBA,EAAkB,KACtDN,EAAWzD,GACXgD,GAAsB,GACtBa,IAAe,GACf,MACF,KAAKjF,EACH6E,EAAW7E,GACXoE,GAAsB,GACtBa,IAAe,GACf,MACF,QACE,UAEH,CAACR,IAEJ,IAWMW,GAAyB,SAACC,GAC1BA,IAAUvF,IACZ8E,GAAc,GACdV,GAAiB,IAEnBF,GAAa,IA2BT7C,GAAYwD,EAAa7E,EAAIC,EAEnC,OACE,+BACKgE,GACD,gCACE,cAAC,EAAD,IACA,sBAAKrE,UAAU,cAAf,UACE,cAAC,EAAD,CAAcH,QAAS,kBAAM6F,GAAuBtF,IAAIN,MAAOM,IAC/D,cAAC,EAAD,CAAcP,QAAS,kBAAM6F,GAAuBrF,IAAIP,MAAOO,WAIlEgE,IAAcM,GACb,gCACE,cAAC,EAAD,CAASnC,YAAaA,EAAaC,YAAaA,IAChD,sBAAKzC,UAAU,wBAAf,UACE,cAAC,EAAD,CACEgC,SAAQN,EACRI,wBA3CkB,WAC1B2C,IACFS,GAAeX,GACfC,GAAkBD,GAClBS,EAAeH,MAAM,GAAGC,KAAK,OAC7BK,EAAW,MACXT,GAAsB,GACtBa,IAAe,OAsCP,cAAC,EAAD,CAAarB,uBAlCM,WAC7BI,GAAa,GACbU,EAAeH,MAAM,GAAGC,KAAK,OAC7BM,EAAe,GACfC,EAAe,GACfF,EAAW,MACXI,IAAe,MA6BL,cAAC,EAAD,CAASlD,mBA1BM,WACzBuC,GAAW,SA2BH,cAAC,EAAD,CAAYnD,UAAWA,GAAWC,QAASA,IAC3C,qBAAK1B,UAAU,aAAf,SACE,qBAAKA,UAAU,QAAf,SACG+E,EAAYa,KAAI,SAACC,EAAYC,GAAb,OACf,cAAC,EAAD,CAEEhG,MAAO+F,EACPhG,QAAS,kBA1EF,SAACiG,GACxB,IAAKpE,GACwB,OAAvBqD,EAAYe,GAAiB,CAC/B,IAAMC,EAAS,YAAOhB,GACtBgB,EAAUD,GAASb,EAAa7E,EAAIC,EACpC2E,EAAee,GACfb,GAAeD,IAoEYe,CAAiBF,KAF3BA,UAOb,cAAC,EAAD,CAAcjC,OAAQyB,SAEpB,cAAC,EAAD,CAAU9C,YAAaA,EAAaC,YAAaA,OCxHhDwD,MARf,WACE,OACE,qBAAKjG,UAAU,MAAf,SACE,cAAC,EAAD,OCMSkG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.df3c660a.chunk.js","sourcesContent":["import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Paper from \"@material-ui/core/Paper\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(0.2),\n      width: theme.spacing(12),\n      height: theme.spacing(12),\n    },\n  },\n}))\n\nconst Field = ({ onClick, value }) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <Paper elevation={3} className=\"field\" onClick={onClick}>\n        {value}\n      </Paper>\n    </div>\n  )\n}\n\nexport default Field\n","import React from \"react\"\nconst GameStart = () => {\n  return (\n    <div className=\"game-info\">\n      <h2 className=\"game-info-title\">Welcome</h2>\n      <h4 className=\"game-info-title\">Who is going to start?</h4>\n    </div>\n  )\n}\n\nexport default GameStart\n","const X = \"X\"\nconst O = \"O\"\nconst TIE = \"TIE\"\n\nconst WINNER_LINES = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6],\n]\n\nObject.freeze(WINNER_LINES)\nWINNER_LINES.forEach((WINNER_LINE) => Object.freeze(WINNER_LINE))\n\nfunction calculateWinner(fields) {\n  for (let i = 0; i < WINNER_LINES.length; i++) {\n    const [a, b, c] = WINNER_LINES[i]\n    if (fields[a] && fields[a] === fields[b] && fields[a] === fields[c]) {\n      return fields[a]\n    }\n  }\n  return null\n}\n\nfunction isAllFieldsOccupied(fields) {\n  return !fields.includes(null)\n}\n\nfunction calculateVerdict(fields) {\n  const winner = calculateWinner(fields)\n  const tie = winner === null && isAllFieldsOccupied(fields)\n  if (winner !== null || tie) {\n    if (tie) {\n      return TIE\n    } else {\n      return winner\n    }\n  }\n  return null\n}\n\nfunction calculateFinalVerdict(gamer1Score, gamer2Score) {\n  if (gamer1Score > gamer2Score) {\n    return X\n  } else if (gamer2Score > gamer1Score) {\n    return O\n  } else return TIE\n}\n\nexport { calculateVerdict, calculateFinalVerdict, X, O, TIE }\n","import React from \"react\"\n\nconst GameStatus = ({ gamerTurn, verdict }) => {\n  return (\n    <div className=\"game-status\">\n      {!verdict ? (\n        <div>\n          Your turn: <span>{gamerTurn}</span>\n        </div>\n      ) : (\n        <div>The winner: {verdict}</div>\n      )}\n    </div>\n  )\n}\n\nexport default React.memo(GameStatus)\n","import React from \"react\"\nimport Button from \"@material-ui/core/Button\"\n\nconst GameContinue = ({ handleClickContinueGame, status }) => {\n  const disabled = !status\n\n  return (\n    <Button\n      className=\"game-flow-btn\"\n      disabled={disabled}\n      variant=\"outlined\"\n      color=\"primary\"\n      onClick={handleClickContinueGame}\n    >\n      Next round\n    </Button>\n  )\n}\n\nexport default GameContinue\n","import React from \"react\"\nimport Button from \"@material-ui/core/Button\"\n\nconst GameEnd = ({ handleClickEndGame }) => {\n  return (\n    <Button\n      className=\"game-flow-btn\"\n      variant=\"outlined\"\n      color=\"primary\"\n      onClick={handleClickEndGame}\n    >\n      Finish Game\n    </Button>\n  )\n}\n\nexport default GameEnd\n","import React from \"react\"\nimport { calculateFinalVerdict, TIE } from \"../../gameLogic\"\n\nconst GameOver = ({ gamer1Score, gamer2Score }) => {\n  const finalVerdict = calculateFinalVerdict(gamer1Score, gamer2Score)\n  return (\n    <div className=\"game-info\">\n      <div className=\"game-info-title game-over-info\">Game Over</div>\n      <div className=\"game-info-title game-over-verdict\">\n        The winner: <span>{finalVerdict}</span>\n      </div>\n      <div className=\"game-info-title game-over-congrat\">\n        {finalVerdict !== TIE ? \"Congratulations!\" : \"Try next time!\"}\n      </div>\n    </div>\n  )\n}\n\nexport default GameOver\n","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Typography from \"@material-ui/core/Typography\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}))\n\nconst GameBar = ({ gamer1Score, gamer2Score }) => {\n  const classes = useStyles()\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Typography variant=\"h6\" className={classes.title}>\n          Tic tac toe\n        </Typography>\n        <div className=\"score-board\">\n          <div className=\"score-board-item\">Gamer X: {gamer1Score}</div>\n          <div className=\"score-board-item\">Gamer O: {gamer2Score}</div>\n        </div>\n      </AppBar>\n    </div>\n  )\n}\n\nexport default React.memo(GameBar)\n","import React from \"react\"\nimport Modal from \"react-modal\"\n\nconst customStyles = {\n  overlay: {\n    top: \"254px\",\n  },\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    padding: \"0\",\n  },\n}\n\nconst VerdictModal = ({ isOpen }) => {\n  return <Modal style={customStyles} isOpen={isOpen} ariaHideApp={false} />\n}\n\nexport default VerdictModal\n","import React from \"react\"\nimport Paper from \"@material-ui/core/Paper\"\n\nconst PlayerButton = ({ onClick, value }) => {\n  return (\n    <Paper elevation={3} className=\"player-btn\" onClick={onClick}>\n      {value}\n    </Paper>\n  )\n}\n\nexport default PlayerButton\n","import React from \"react\"\nimport Button from \"@material-ui/core/Button\"\n\nconst GameRestart = ({ handleClickRestartGame }) => {\n  return (\n    <Button\n      className=\"game-flow-btn\"\n      variant=\"outlined\"\n      color=\"primary\"\n      onClick={handleClickRestartGame}\n    >\n      Restart Game\n    </Button>\n  )\n}\n\nexport default GameRestart\n","import React, { useState, useEffect } from \"react\"\nimport Field from \"./Field\"\nimport GameStart from \"../GameFlow/GameStart\"\nimport { calculateVerdict, X, O, TIE } from \"../../gameLogic\"\nimport GameStatus from \"../GameFlow/GameStatus\"\nimport GameContinue from \"../GameFlow/GameContinue\"\nimport GameEnd from \"../GameFlow/GameEnd\"\nimport GameOver from \"../GameFlow/GameOver\"\nimport GameBar from \"./GameBar\"\nimport VerdictModal from \"./VerdictModal\"\nimport PlayerButton from \"./PlayerButton\"\nimport GameRestart from \"../GameFlow/GameRestart\"\n\nconst Board = () => {\n  const [startGame, setStartGame] = useState(false)\n  const [gamer1Started, setgamer1Started] = useState(true)\n  const [continueGameActive, setContinueGameActive] = useState(false)\n  const [endGame, setEndGame] = useState(false)\n  const [boardFields, setBoardFields] = useState(Array(9).fill(null))\n  const [gamer1Turn, setGamer1Turn] = useState(true)\n  const [verdict, setVerdict] = useState(null)\n  const [gamer1Score, setGamer1Score] = useState(0)\n  const [gamer2Score, setGamer2Score] = useState(0)\n  const [modalIsOpen, setModalIsOpen] = useState(false)\n\n  useEffect(() => {\n    const verdict = calculateVerdict(boardFields)\n    switch (verdict) {\n      case X:\n        setGamer1Score((prevGamer1Score) => prevGamer1Score + 1)\n        setVerdict(verdict)\n        setContinueGameActive(true)\n        setModalIsOpen(true)\n        break\n      case O:\n        setGamer2Score((prevGamer1Score) => prevGamer1Score + 1)\n        setVerdict(verdict)\n        setContinueGameActive(true)\n        setModalIsOpen(true)\n        break\n      case TIE:\n        setVerdict(TIE)\n        setContinueGameActive(true)\n        setModalIsOpen(true)\n        break\n      default:\n        return\n    }\n  }, [boardFields])\n\n  const handleClickField = (index) => {\n    if (!verdict) {\n      if (boardFields[index] === null) {\n        const newFields = [...boardFields]\n        newFields[index] = gamer1Turn ? X : O\n        setBoardFields(newFields)\n        setGamer1Turn(!gamer1Turn)\n      }\n    }\n  }\n\n  const handleClickGamerPicked = (gamer) => {\n    if (gamer !== X) {\n      setGamer1Turn(false)\n      setgamer1Started(false)\n    }\n    setStartGame(true)\n  }\n\n  const handleClickContinueGame = () => {\n    if (continueGameActive) {\n      setGamer1Turn(!gamer1Started)\n      setgamer1Started(!gamer1Started)\n      setBoardFields(Array(9).fill(null))\n      setVerdict(null)\n      setContinueGameActive(false)\n      setModalIsOpen(false)\n    }\n  }\n\n  const handleClickRestartGame = () => {\n    setStartGame(false)\n    setBoardFields(Array(9).fill(null))\n    setGamer1Score(0)\n    setGamer2Score(0)\n    setVerdict(null)\n    setModalIsOpen(false)\n  }\n\n  const handleClickEndGame = () => {\n    setEndGame(true)\n  }\n\n  const gamerTurn = gamer1Turn ? X : O\n\n  return (\n    <div>\n      {(!startGame && (\n        <div>\n          <GameStart />\n          <div className=\"btn-section\">\n            <PlayerButton onClick={() => handleClickGamerPicked(X)} value={X} />\n            <PlayerButton onClick={() => handleClickGamerPicked(O)} value={O} />\n          </div>\n        </div>\n      )) ||\n        (startGame && !endGame && (\n          <div>\n            <GameBar gamer1Score={gamer1Score} gamer2Score={gamer2Score} />\n            <div className=\"game-flow-btn-section\">\n              <GameContinue\n                status={verdict ? true : false}\n                handleClickContinueGame={handleClickContinueGame}\n              />\n              <GameRestart handleClickRestartGame={handleClickRestartGame} />\n              <GameEnd handleClickEndGame={handleClickEndGame} />\n            </div>\n            <GameStatus gamerTurn={gamerTurn} verdict={verdict} />\n            <div className=\"game-board\">\n              <div className=\"board\">\n                {boardFields.map((boardField, index) => (\n                  <Field\n                    key={index}\n                    value={boardField}\n                    onClick={() => handleClickField(index)}\n                  />\n                ))}\n              </div>\n            </div>\n            <VerdictModal isOpen={modalIsOpen} />\n          </div>\n        )) || <GameOver gamer1Score={gamer1Score} gamer2Score={gamer2Score} />}\n    </div>\n  )\n}\n\nexport default Board\n","import \"./App.scss\"\nimport Board from \"./Components/Board/Board\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Board />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}